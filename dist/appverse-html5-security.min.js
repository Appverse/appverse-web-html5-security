/*! appverse-web-html5-security - v0.5.0 - */
!function(){"use strict";function a(a,b,c){function d(a,b,c){return{response:function(a){var d=c.get("Oauth_AccessToken"),e=a.headers("X-XSRF-Cookie");return b.debug("X-XSRF-Cookie: "+e),e&&d.setFromHeader(e),a}}}c.exists("appverse.cache")||a.factory("CacheFactory",["$cacheFactory",function(a){return{_browserCache:a("basicCache")}}]),d.$inject=["$q","$log","$injector"],a.factory("oauthResponseInterceptor",d),b.interceptors.push("oauthResponseInterceptor");var e=["$q","$location",function(a,b){return{responseError:function(c){return 401===c.status?(b.path("/home"),a.reject(c)):a.reject(c)}}}];a.factory("logsOutUserOn401",e),b.interceptors.push("logsOutUserOn401")}function b(a){a.debug("appverse.security run")}angular.module("appverse.security",["ngCookies","appverse.configuration","appverse.utils","ngResource"]).config(a).run(b),a.$inject=["$provide","$httpProvider","ModuleSeekerProvider"],b.$inject=["$log"]}(),function(){"use strict";function a(a,b,c,d,e,f,g){return{sendLoginRequest:function(a){var b=e.defer(),f=c.encode(a.name+":"+a.password);return d({method:g.loginHTTPMethod,url:g.loginURL,headers:{Authorization:"Basic "+f,"Content-Type":g.Headers_ContentType},timeout:3e4,cache:!1}).success(function(a,c,d,e){var f=[];f.data=a,f.headers=d,f.status=c,f.config=e,b.resolve(f)}).error(function(a,c){b.reject(a,c)}),b.promise},sendLogoutRequest:function(){var a=e.defer();return d({method:g.logoutHTTPMethod,url:g.logoutURL,headers:{"Content-Type":g.Headers_ContentType},timeout:3e4,cache:!1}).success(function(b,c,d,e){var f=[];f.data=b,f.headers=d,f.status=c,f.config=e,a.resolve(f)}).error(function(b,c){a.reject(b,c)}),a.promise},login:function(a,c,d,e,g){var h=new User(a,c,d,e,g);f.debug(h.print()),b.setCurrentUser(h)},isLoggedIn:function(){return b.getCurrentUser()?!0:!1},logOut:function(a){b.removeUser(a)}}}angular.module("appverse.security").factory("AuthenticationService",a),a.$inject=["$rootScope","UserService","Base64","$http","$q","$log","SECURITY_GENERAL"]}(),function(){"use strict";function a(a,b,c){function d(b){var c=g(a.hash());c&&(m(),k(c,b))}function e(){var a=c.getCurrentUser();a&&(o=a.bToken)}function f(){var a=c.getCurrentUser();a&&(p=a.xsrfToken)}function g(a){for(var b=a.split("&"),c={},d=0;d<b.length;d++){var e=b[d].split("="),f=e[0],g=e[1];c[f]=g}return c.access_token||c.error?c:void 0}function h(a){if("cookies"===a.storage&&b[a.client]){var c=JSON.parse(b[a.client]);k(c,a)}}function i(a,c){a.storage===SECURITY_OAUTH.storage_cookies&&c&&c.access_token&&(b[a.client]=JSON.stringify(c))}function j(a,b){o=b&&b.access_token?b.access_token:n.get();var d=c.getCurrentUser();d&&(d.bToken=o,c.setCurrentUser(d))}function k(a,b){return o=o||{},angular.extend(o,a),l(),i(b,a),j(o),o}function l(){if(o){var a=new Date;a.setSeconds(a.getSeconds()+parseInt(o.expires_in)-60),o.expires_at=a}}function m(){a.hash("")}var n={},o=null,p=null;return n.get=function(){return e(),o},n.getXSRF=function(){return f(),p},n.set=function(a){return d(a),h(a),o},n.setFromHeader=function(a){return j(a),a},n.destroy=function(a){return o=null,p=null,delete b[a.client],o},n.expired=function(){return o&&o.expires_at&&o.expires_at<new Date},n}angular.module("appverse.security").factory("Oauth_AccessToken",a),a.$inject=["$location","$cookies","UserService"]}(),function(){"use strict";function a(a){var b,c={};return c.set=function(c){return b=c.site+c.authorizePath+"?response_type=token&client_id="+c.client+"&redirect_uri="+c.redirect+"&scope="+c.scope+"&state="+a.url()},c.get=function(){return b},c.redirect=function(){window.location.replace(b)},c}angular.module("appverse.security").factory("Oauth_Endpoint",a),a.$inject=["$location"]}(),function(){"use strict";function a(a,b,c){var d=b(c.profile,{},{});return a.wrapRequest(d,["get"])}angular.module("appverse.security").factory("Oauth_Profile",a),a.$inject=["Oauth_RequestWrapper","$resource","SECURITY_OAUTH"]}(),function(){"use strict";function a(a,c,d,e,f){function g(g,h){if(a.debug("token: "+g),a.debug("is same domain? "+b(e.BaseUrl,c.url())),g){var i;b(e.BaseUrl,c.url())&&(a.debug("*** isSameDomain"),0===f.XSRFPolicyType?(a.debug("*** case 0"),h.setDefaultHeaders({Authorization:"Bearer"+g,"Content-Type":e.DefaultContentType})):1===f.XSRFPolicyType?(a.debug("*** case 1"),i=d.getXSRF(),h.setDefaultHeaders({Authorization:"Bearer"+g,"Content-Type":e.DefaultContentType,"X-XSRF-TOKEN":i})):2===f.XSRFPolicyType&&(a.debug("*** case 2"),i=c.cookies()[f.XSRFCSRFCookieName],h.setDefaultHeaders({Authorization:"Bearer"+g,"Content-Type":e.DefaultContentType,"X-XSRF-TOKEN":i})))}return h}var h={};return h.wrapRequest=function(b){var c=d.get(),e=b;return c?(a.debug("OAuth token is present and valid. The wrapped request is secure."),g(c,b)):a.debug("OAuth token is not present yet. The wrapped request will not be secure."),e},h}function b(a,b){var c=/^(([^:]+):)?\/\/(\w+:{0,1}\w*@)?([\w\.-]*)?(:([0-9]+))?(.*)$/,d=c.exec(a);if(null===d)return!0;var e={protocol:d[2],host:d[4],port:int(d[6])||DEFAULT_PORTS[d[2]]||null,relativeProtocol:void 0===d[2]||""===d[2]};d=URL_MATCH.exec(b);var f={protocol:d[1],host:d[3],port:int(d[5])||DEFAULT_PORTS[d[1]]||null};return(e.protocol==f.protocol||e.relativeProtocol)&&e.host==f.host&&(e.port==f.port||e.relativeProtocol&&f.port==DEFAULT_PORTS[f.protocol])}angular.module("appverse.security").factory("Oauth_RequestWrapper",a),a.$inject=["$log","$browser","Oauth_AccessToken","REST_CONFIG","SECURITY_GENERAL"]}(),function(){"use strict";angular.module("appverse.security").directive("oauth",["SECURITY_OAUTH","Oauth_AccessToken","Oauth_Endpoint","Oauth_Profile","$rootScope","$compile","$http","$templateCache",function(a,b,c,d,e,f,g,h){var i={restrict:"AE",replace:!1,scope:{site:"@",client:"@",redirect:"@",scope:"@",flow:"@",view:"@",storage:"@",profile:"@",template:"@"}};return i.link=function(i,j,k){function l(){i.site=i.site||a.scopeURL,i.clientID=i.clientID||a.clientID,i.redirect=i.redirect||a.redirect,i.scope=i.scope||a.scope,i.flow=i.flow||a.flow,i.view=i.view||a.view,i.storage=i.storage||a.storage,i.scope=i.scope||a.scope,i.authorizePath=i.authorizePath||a.scope_authorizePath,i.tokenPath=i.tokenPath||a.scope_tokenPath,i.template=i.template||a.scope_template}function m(){g.get(i.template,{cache:h}).success(function(a){j.html(a),f(j.contents())(i)})}function n(){var c=b.get();c&&c.access_token&&a.profile&&(i.profile=d.get())}function o(a){var a=b.get();return a?a.access_token?p():a.error?r():void 0:q()}function p(){e.$broadcast("oauth:success",b.get()),i.show="logout"}function q(){e.$broadcast("oauth:logout"),i.show="login"}function r(){i.show="denied",e.$broadcast("oauth:denied")}i.show="none",i.$watch("client",function(a){l(),m(),c.set(i),b.set(i),n(),o()}),i.login=function(){c.redirect()},i.logout=function(){b.destroy(i),q()},i.$on("oauth:template",function(a,b){i.template=b,m(i)})},i}])}(),function(){"use strict";function a(a,b,c){return{validateRoleAdmin:function(){var d=c._browserCache.get("loggedUser").roles;a.debug("roles in session: "+d);var e;if(d&&b.adminRoles){for(var f=0;f<b.adminRoles.length;f++){if(_.contains(d,b.adminRoles[f])){e=!0;break}e=!1}return e}return!1},validateRoleInUserOther:function(a){var b=c._browserCache.get("loggedUser");return b?_.contains(a,b.roles):!1}}}angular.module("appverse.security").factory("RoleService",a),a.$inject=["$log","AUTHORIZATION_DATA","CacheFactory"]}(),function(){"use strict";function a(a,c){return{setCurrentUser:function(b){c._browserCache.put("loggedUser",{username:b.name,roles:b.roles,bToken:b.bToken,xsrfToken:b.xsrfToken,isLogged:b.isLogged}),a.debug("New user has been stored to cache.")},getCurrentUser:function(){var a=c._browserCache.get("loggedUser");return a&&a.isLogged?new b(a.username,a.roles,a.bToken,a.xsrfToken,a.isLogged):void 0},removeUser:function(){c._browserCache.remove("loggedUser")}}}function b(a,b,c,d,e){this.name=a,this.roles=b,this.bToken=c,this.xsrfToken=d,this.isLogged=e}angular.module("appverse.security").factory("UserService",a),a.$inject=["$log","CacheFactory"],b.prototype.print=function(){return"User data. Name:"+this.name+"| Roles: "+this.roles.toString()+"| Bearer Token: "+this.bToken+"| XSRFToken: "+this.xsrfToken+"| Logged: "+this.isLogged}}();
//# sourceMappingURL=appverse-html5-security.min.js.map